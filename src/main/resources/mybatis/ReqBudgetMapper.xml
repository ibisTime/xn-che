<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.loan.dao.IReqBudgetDAO">
	<resultMap id="reqBudget_DB_Result" type="reqBudget">
		<result column="code" property="code" />
		<result column="company_code" property="companyCode" />
		<result column="receipt_account" property="receiptAccount" />
		<result column="budget_amount" property="budgetAmount" />
		<result column="use_datetime" property="useDatetime" />
		<result column="finance_check_note" property="financeCheckNote" />
		<result column="pay_amount" property="payAmount" />
		<result column="pay_account" property="payAccount" />
		<result column="water_bill" property="waterBill" />
		<result column="pay_datetime" property="payDatetime" />
		<result column="apply_user" property="applyUser" />
		<result column="apply_datetime" property="applyDatetime" />
		<result column="pay_remark" property="payRemark" />
		<result column="dz_amount" property="dzAmount" />
		<result column="dz_datetime" property="dzDatetime" />
		<result column="bill_pdf" property="billPdf" />
		<result column="collection_amount" property="collectionAmount" />
		<result column="collection_account" property="collectionAccount" />
		<result column="collection_datetime" property="collectionDatetime" />
		<result column="collection_remark" property="collectionRemark" />
		<result column="cur_node_code" property="curNodeCode" />
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="roleCode != null and roleCode != '' ">
				AND trn.role_code = #{roleCode}
			</if>
			<if test="companyCode != null and companyCode != '' ">
				AND t.company_code = #{companyCode}
			</if>
			<if test="applyDatetimeStart != null and applyDatetimeStart != '' ">
				<![CDATA[AND t.apply_datetime >= #{applyDatetimeStart}]]>
			</if>
			<if test="applyDatetimeEnd != null and applyDatetimeEnd != '' ">
				<![CDATA[AND t.apply_datetime <= #{applyDatetimeEnd}]]>
			</if>
			<if test="payDatetimeStart != null and payDatetimeStart != '' ">
				<![CDATA[AND t.pay_datetime >= #{payDatetimeStart}]]>
			</if>
			<if test="payDatetimeEnd != null and payDatetimeEnd != '' ">
				<![CDATA[AND t.pay_datetime <= #{payDatetimeEnd}]]>
			</if>
			<if test="useDatetimeStart != null and useDatetimeStart != '' ">
				<![CDATA[AND t.use_datetime >= #{useDatetimeStart}]]>
			</if>
			<if test="useDatetimeEnd != null and useDatetimeEnd != '' ">
				<![CDATA[AND t.use_datetime <= #{useDatetimeEnd}]]>
			</if>
		</trim>
	</sql>
	<select id="select_reqBudget" parameterType="reqBudget" resultMap="reqBudget_DB_Result">
		SELECT
		t.code
		,t.company_code
		,t.receipt_account
		,t.budget_amount
		,t.use_datetime
		,t.finance_check_note
		,t.pay_amount
		,t.pay_account
		,t.water_bill
		,t.pay_datetime
		,t.apply_user
		,t.apply_datetime
		,t.pay_remark
		,t.dz_amount
		,t.dz_datetime
		,t.bill_pdf
		,t.collection_amount
		,t.collection_account
		,t.collection_datetime
		,t.collection_remark
		,t.cur_node_code
		FROM
		tdq_req_budget t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>

	<select id="select_reqBudget_count" parameterType="reqBudget"
		resultType="java.lang.Long">
		SELECT count(1) FROM tdq_req_budget t
		<include refid="where_condition" />
	</select>
	
	<select id="select_reqBudget_roleCode" parameterType="reqBudget" resultMap="reqBudget_DB_Result">
		SELECT
		distinct
		t.code
		,t.company_code
		,t.receipt_account
		,t.budget_amount
		,t.use_datetime
		,t.finance_check_note
		,t.pay_amount
		,t.pay_account
		,t.water_bill
		,t.pay_datetime
		,t.apply_user
		,t.apply_datetime
		,t.pay_remark
		,t.dz_amount
		,t.dz_datetime
		,t.bill_pdf
		,t.collection_amount
		,t.collection_account
		,t.collection_datetime
		,t.collection_remark
		,t.cur_node_code
		FROM
		tdq_req_budget t left join tsys_role_node trn on t.cur_node_code = trn.node_code
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	<select id="select_reqBudget_count_byRoleCode" parameterType="reqBudget"
		resultType="java.lang.Long">
		SELECT count(1) FROM (SELECT distinct code FROM tdq_req_budget t left join tsys_role_node trn on t.cur_node_code = trn.node_code
		<include refid="where_condition" />) tb
	</select>
	
	<select id="select_today_reqBudget" parameterType="reqBudget" resultMap="reqBudget_DB_Result">
		SELECT
		t.code
		,t.company_code
		,t.receipt_account
		,t.budget_amount
		,t.use_datetime
		,t.finance_check_note
		,t.pay_amount
		,t.pay_account
		,t.water_bill
		,t.pay_datetime
		,t.apply_user
		,t.apply_datetime
		,t.pay_remark
		,t.dz_amount
		,t.dz_datetime
		,t.collection_amount
		,t.collection_account
		,t.collection_datetime
		,t.collection_remark
		,t.cur_node_code
		FROM
		tdq_req_budget t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
		<!-- AND to_days(t.pay_datetime) = to_days(now()); -->
	</select>
	
	<select id="select_useDay_reqBudget" parameterType="reqBudget" resultMap="reqBudget_DB_Result">
		SELECT
		t.code
		,t.company_code
		,t.receipt_account
		,t.budget_amount
		,t.use_datetime
		,t.finance_check_note
		,t.pay_amount
		,t.pay_account
		,t.water_bill
		,t.pay_datetime
		,t.apply_user
		,t.apply_datetime
		,t.pay_remark
		,t.dz_amount
		,t.dz_datetime
		,t.collection_amount
		,t.collection_account
		,t.collection_datetime
		,t.collection_remark
		,t.cur_node_code
		FROM
		tdq_req_budget t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	<insert id="insert_reqBudget" parameterType="reqBudget">
		INSERT INTO
		tdq_req_budget(
		code
		,company_code
		,receipt_account
		,budget_amount
		,use_datetime
		,finance_check_note
		,pay_amount
		,pay_account
		,water_bill
		,pay_datetime
		,apply_user
		,apply_datetime
		,pay_remark
		,dz_amount
		,dz_datetime
		,collection_amount
		,collection_account
		,collection_datetime
		,collection_remark
		,cur_node_code
		)
		VALUES(
		#{code}
		,#{companyCode}
		,#{receiptAccount}
		,#{budgetAmount}
		,#{useDatetime}
		,#{financeCheckNote}
		,#{payAmount}
		,#{payAccount}
		,#{waterBill}
		,#{payDatetime}
		,#{applyUser}
		,#{applyDatetime}
		,#{payRemark}
		,#{dzAmount}
		,#{dzDatetime}
		,#{collectionAmount}
		,#{collectionAccount}
		,#{collectionDatetime}
		,#{collectionRemark}
		,#{curNodeCode}
		)
	</insert>

	<update id="update_reqBudget" parameterType="reqBudget">
		UPDATE tdq_req_budget
		SET
		company_code = #{companyCode}
		,receipt_account = #{receiptAccount}
		,budget_amount = #{budgetAmount}
		,use_datetime = #{useDatetime}
		,finance_check_note = #{financeCheckNote}
		,pay_amount = #{payAmount}
		,pay_account = #{payAccount}
		,water_bill = #{waterBill}
		,pay_datetime = #{payDatetime}
		,apply_user = #{applyUser}
		,apply_datetime = #{applyDatetime}
		,pay_remark = #{payRemark}
		,dz_amount = #{dzAmount}
		,dz_datetime = #{dzDatetime}
		,collection_amount = #{collectionAmount}
		,collection_account = #{collectionAccount}
		,collection_datetime = #{collectionDatetime}
		,collection_remark = #{collectionRemark}
		,cur_node_code = #{curNodeCode}
		WHERE code = #{code}
	</update>
	
	<update id="update_node" parameterType="reqBudget">
		UPDATE tdq_req_budget
		SET
		cur_node_code = #{curNodeCode}
		WHERE code = #{code}
	</update>
	
	<update id="update_backRecord" parameterType="reqBudget">
		UPDATE tdq_req_budget
		SET
		cur_node_code = #{curNodeCode}
		,collection_amount = #{collectionAmount}
		,bill_pdf = #{billPdf}
		WHERE code = #{code}
	</update>
	
	
	<update id="loan" parameterType="reqBudget">
		UPDATE tdq_req_budget
		SET
		pay_amount = #{payAmount}
		,pay_account = #{payAccount}
		,water_bill = #{waterBill}
		,pay_datetime = #{payDatetime}
		,pay_remark = #{payRemark}
		,cur_node_code = #{curNodeCode}
		WHERE code = #{code}
	</update>
	
	<update id="update_collection" parameterType="reqBudget">
		UPDATE tdq_req_budget
		SET
		collection_account = #{collectionAccount}
		,collection_datetime = #{collectionDatetime}
		,collection_remark = #{collectionRemark}
		,cur_node_code = #{curNodeCode}
		WHERE code = #{code}
	</update>
	
</mapper>
