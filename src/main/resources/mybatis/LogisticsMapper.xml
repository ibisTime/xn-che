<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.loan.dao.ILogisticsDAO">
	<resultMap id="logistics_DB_result" type="logistics">
		<result column="code" property="code" />
		<result column="type" property="type" />
		<result column="biz_code" property="bizCode" />
		<result column="user_id" property="userId" />
		<result column="from_node_code" property="fromNodeCode" />
		
		<result column="to_node_code" property="toNodeCode" />
		<result column="send_type" property="sendType" />
		<result column="logistics_company" property="logisticsCompany" />
		<result column="logistics_code" property="logisticsCode" />
		
		<result column="send_datetime" property="sendDatetime" />
		<result column="send_note" property="sendNote" />
		<result column="receipt_datetime" property="receiptDatetime" />
		<result column="is_bank_point_part_supt" property="isBankPointPartSupt" />
		<result column="supplement_reason" property="supplementReason" />
		<result column="supplement_note" property="supplementNote" />
		<result column="status" property="status" />
		<result column="remark" property="remark" />
	</resultMap>

	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">	
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="type != null and type != '' ">
				AND t.type = #{type}
			</if>
			<if test="bizCode != null and bizCode != '' ">
				AND t.biz_code = #{bizCode}
			</if>
			<if test="fromNodeCode != null and fromNodeCode != '' ">
				AND t.from_node_code = #{fromNodeCode}
			</if>
			<if test="toNodeCode != null and toNodeCode != '' ">
				AND t.to_node_code = #{toNodeCode}
			</if>
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="statusList != null and statusList != '' ">
				AND t.status in 
				<foreach collection="statusList" index="status" item="item" open="(" separator="," close=")">
		            #{item}
		        </foreach>
			</if>
			<if test="typeList != null and typeList != '' ">
				AND t.type in 
				<foreach collection="typeList" index="type" item="item" open="(" separator="," close=")">
		            #{item}
		        </foreach>
			</if>
			<if test="supplementNote != null and supplementNote != '' ">
				AND t.supplement_note = #{supplementNote}
			</if>
		</trim>
	</sql>
	
	<select id="select_logistics" parameterType="logistics" resultMap="logistics_DB_result">
		SELECT
		t.code
		,t.type
		,t.biz_code
		,t.user_id
		,t.from_node_code
		,t.to_node_code
		
		,t.send_type
		,t.logistics_company
		,t.logistics_code
		
		,t.send_datetime
		,t.send_note
		,t.receipt_datetime
		,t.is_bank_point_part_supt
		,t.supplement_reason
		,t.supplement_note
		,t.status
		,t.remark
		FROM
		tdq_logistics t
		<include refid="where_condition"/>
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	<select id="select_logisticsByCommitBank" parameterType="logistics" resultMap="logistics_DB_result">
		SELECT
		t.code
		,t.type
		,t.biz_code
		,t.user_id
		,t.from_node_code
		,t.to_node_code
		
		,t.send_type
		,t.logistics_company
		,t.logistics_code
		
		,t.send_datetime
		,t.send_note
		,t.receipt_datetime
		,t.is_bank_point_part_supt
		,t.supplement_reason
		,t.supplement_note
		,t.status
		,t.remark
		FROM
		tdq_logistics t where t.send_datetime in (select max(send_datetime) FROM tdq_logistics t
		<include refid="where_condition" />)
	</select>

	<select id="select_logistics_count" parameterType="logistics" resultType="java.lang.Long">
		SELECT count(1) FROM tdq_logistics t 
		<include refid="where_condition"/>
	</select>
	
	<insert id="insert_logistics" parameterType="logistics">
		INSERT INTO tdq_logistics(
		code
		,type
		,biz_code
		,user_id
		,from_node_code
		
		,to_node_code
		,status
		)
		VALUES(
		#{code}
		,#{type}
		,#{bizCode}
		,#{userId}
		,#{fromNodeCode}
		
		,#{toNodeCode}
		,#{status}
		)
	</insert>
	
	<update id="update_logistics_send" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.send_type = #{sendType}
		,t.logistics_company = #{logisticsCompany}
		,t.logistics_code = #{logisticsCode}
		,t.send_datetime = #{sendDatetime}
		,t.send_note = #{sendNote}
		,t.status = #{status}
		WHERE code = #{code}
	</update>
	
	<update id="update_logistics_receive" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.receipt_datetime = #{receiptDatetime}
		,t.status = #{status}
		,t.remark = #{remark}
		WHERE code = #{code}
	</update>
	
	<update id="update_logistics_backPiece" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.status = #{status}
		,t.remark = #{remark}
		WHERE code = #{code}
	</update>
	
	<update id="update_logistics_audite" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.status = #{status}
		,t.remark = #{remark}
		WHERE code = #{code}
	</update>
	
	<update id="update_logistics" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.from_node_code = #{fromNodeCode}
		,t.to_node_code = #{toNodeCode}
		,t.is_bank_point_part_supt = #{isBankPointPartSupt}
		WHERE code = #{code}
	</update>
	
	<update id="update_logistics_sendAgain" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.supplement_reason = #{supplementReason}
		,t.supplement_note = #{supplementNote}
		,t.from_node_code = #{fromNodeCode}
		,t.to_node_code = #{toNodeCode}
		,t.is_bank_point_part_supt = #{isBankPointPartSupt}
		,t.status = #{status}
		WHERE code = #{code}
	</update>
	
	<delete id="delete_logistics" parameterType="logistics">
		DELETE FROM logistics 
		WHERE code = #{code}
	</delete>
</mapper>
